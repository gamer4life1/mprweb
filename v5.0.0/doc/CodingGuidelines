Coding Guidelines
=================

DISCLAIMER: We realise the code doesn't necessarily follow all the rules.
This is an attempt to establish a standard coding style for future
development.

Coding style
------------

Column width: 79 columns or less within reason.

Indentation: tabs (standard eight column width)
Please don't add any mode lines. Adjust your editor to display tabs to your
preferred width. Generally code should work with the standard eight column
tabs.

No short open tags. '<?'
Do not end files with a close tag. '?>'
Try embedding as little XHTML in the PHP as possible.
Consider creating templates for XHTML.

All markup should conform to XHTML 1.0 Strict requirements.
You can use http://validator.w3.org to check the markup.

Prevent PHP Notices by using isset() or empty() in conditionals that
reference $_GET, $_POST, or $_REQUEST variables.

MySQL queries should generally go into functions.

Submitting patches
------------------

!!! PLEASE TEST YOUR PATCHES BEFORE SUBMITTING !!!
Submit uncompressed git-formatted patches to aur-dev@archlinux.org.

You will need to register on the mailing list before submitting:
https://mailman.archlinux.org/mailman/listinfo/aur-dev

Base your patches on the master branch as forward development is done there.
When writing patches please keep unnecessary changes to a minimum.

Try to keep your commits small and focused.
Smaller patches are much easier to review and have a better chance of being
pushed more quickly into the main repo. Smaller commits also makes reviewing
the commit history and tracking down specific changes much easier.

Try to make your commit messages brief but descriptive.

Glossary
--------
git-formatted patch:
	A patch that is produced via `git format-patch` and is sent via
	`git send-email` or as an inline attachment of an email.
